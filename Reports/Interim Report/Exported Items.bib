
@inproceedings{hazarika_performance_2017,
	title = {Performance comparision of {Hadoop} and spark engine},
	doi = {10.1109/I-SMAC.2017.8058263},
	abstract = {Data has been growing at an exponential rate in the recent era. This data has to be processed and analyzed carefully to get new insights. So there is a need for a platform that can perform efficient data processing, which leads to the building up of platforms like Hadoop and Spark. Hadoop Map Reduce model helped to process it in a distributed fashion with computation being done at multiple nodes. In spite of the remarkable processing power it still, has some shortcomings. Spark, a computation engine can solve some of the problems involving Iterative/Machine learning queries by caching some of the results from previous queries. Although Spark is faster than Hadoop in most of the iterative applications it is constrained by memory requirements. This paper briefly discusses Spark and Hadoop architecture, their theoretical differences and the comparison of their performance.},
	booktitle = {2017 {International} {Conference} on {I}-{SMAC} ({IoT} in {Social}, {Mobile}, {Analytics} and {Cloud}) ({I}-{SMAC})},
	author = {Hazarika, Akaash Vishal and Ram, G Jagadeesh Sai Raghu and Jain, Eeti},
	month = feb,
	year = {2017},
	keywords = {Big Data, Computer architecture, Directed Acyclic graphs, Engines, Fault tolerance, Fault tolerant systems, Hadoop, Lazy Evaluation, Logistics, MapReduce, Mobile communication, Resilient Distributed Datasets, Spark, Sparks},
	pages = {671--674},
}
